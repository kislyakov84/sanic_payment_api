# --- Этап 1: Сборщик (Builder) ---
# Используем официальный образ Python 3.12 в легковесной версии 'slim'.
# Даем этому этапу имя 'builder', чтобы ссылаться на него позже.
FROM python:3.12-slim as builder

# Устанавливаем рабочую директорию внутри образа.
WORKDIR /app

# Устанавливаем системные зависимости, которые нужны для сборки некоторых Python пакетов.
# Мы уже сталкивались с этим на первом дне!
# --no-install-recommends - не ставить лишние пакеты.
# && rm -rf /var/lib/apt/lists/* - очищаем кэш apt, чтобы уменьшить размер образа.
RUN apt-get update \
    && apt-get install -y build-essential \
    && rm -rf /var/lib/apt/lists/*

# Устанавливаем uv - наш быстрый менеджер пакетов.
RUN pip install uv

# Копируем только файл с зависимостями. Это важный трюк для кеширования.
# Docker будет пересобирать следующий слой только если requirements.txt изменится.
COPY requirements.txt .

# Устанавливаем зависимости в отдельное виртуальное окружение внутри образа.
# Это лучшая практика, чтобы не засорять системный Python.
RUN uv venv /app/.venv && \
    . /app/.venv/bin/activate && \
    uv pip install --no-cache-dir -r requirements.txt


# --- Этап 2: Финальный образ (Runner) ---
# Начинаем с чистого листа, используя тот же базовый образ.
FROM python:3.12-slim

# Устанавливаем рабочую директорию.
WORKDIR /app

# Копируем все наше приложение из текущей директории в образ.
COPY ./src ./src

# Копируем виртуальное окружение со всеми установленными зависимостями
# с предыдущего этапа 'builder'. Это называется multi-stage build.
# Он позволяет держать финальный образ чистым, без сборочных инструментов типа build-essential.
COPY --from=builder /app/.venv ./.venv

# Указываем, что наше приложение будет использовать интерпретатор из .venv.
# Это делает наш образ самодостаточным.
ENV PATH="/app/.venv/bin:$PATH"

# Команда, которая будет выполняться при запуске контейнера.
# Мы запускаем приложение через uvicorn, как на продакшене.
# --host 0.0.0.0 - слушать на всех сетевых интерфейсах.
# --port 8000 - порт внутри контейнера.
# src.main:app - путь к нашему Sanic-приложению.
CMD ["uvicorn", "--host", "0.0.0.0", "--port", "8000", "src.main:app"]