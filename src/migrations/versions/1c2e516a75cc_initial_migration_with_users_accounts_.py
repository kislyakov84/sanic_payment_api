"""Initial migration with users, accounts, payments

Revision ID: 1c2e516a75cc
Revises:
Create Date: 2025-06-18 19:04:00.598996

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

import bcrypt


# revision identifiers, used by Alembic.
revision: str = "1c2e516a75cc"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("full_name", sa.String(), nullable=True),
        sa.Column("hashed_password", sa.String(), nullable=False),
        sa.Column("is_admin", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_table(
        "accounts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "balance",
            sa.Numeric(precision=10, scale=2),
            server_default="0.00",
            nullable=False,
        ),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_accounts_id"), "accounts", ["id"], unique=False)
    op.create_table(
        "payments",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("transaction_id", sa.String(), nullable=False),
        sa.Column("amount", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("account_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["account_id"],
            ["accounts.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_payments_id"), "payments", ["id"], unique=False)
    op.create_index(
        op.f("ix_payments_transaction_id"), "payments", ["transaction_id"], unique=True
    )
    # ### end Alembic commands ###

    # Добавляем наших тестовых пользователей и счет
    # Важно: пароли 'password' и 'admin_password' должны быть захэшированы
    # Мы сделаем это прямо здесь для простоты.
    # В реальном приложении это делается при регистрации пользователя.

    # Пароль для обычного пользователя
    user_password = "password"
    hashed_user_password = bcrypt.hashpw(
        user_password.encode("utf-8"), bcrypt.gensalt()
    )

    # Пароль для администратора
    admin_password = "admin_password"
    hashed_admin_password = bcrypt.hashpw(
        admin_password.encode("utf-8"), bcrypt.gensalt()
    )

    op.execute(
        f"""
        INSERT INTO users (email, full_name, hashed_password, is_admin) VALUES
        ('testuser@example.com', 'Test User', '{hashed_user_password.decode('utf-8')}', false),
        ('admin@example.com', 'Admin User', '{hashed_admin_password.decode('utf-8')}', true);
    """
    )

    # Создаем счет для тестового пользователя
    op.execute(
        """
        INSERT INTO accounts (balance, user_id)
        SELECT 1000.00, id FROM users WHERE email = 'testuser@example.com';
    """
    )


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_payments_transaction_id"), table_name="payments")
    op.drop_index(op.f("ix_payments_id"), table_name="payments")
    op.drop_table("payments")
    op.drop_index(op.f("ix_accounts_id"), table_name="accounts")
    op.drop_table("accounts")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    # ### end Alembic commands ###
